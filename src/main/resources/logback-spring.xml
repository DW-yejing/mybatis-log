<?xml version="1.0" encoding="UTF-8"?>
<!-- configuration属性说明：
    scan：当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。
    scanPeriod：设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒当scan为true时，此属性生效。默认的时间间隔为1分钟。
    debug：当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。
-->
<!-- pattern符号说明：
    %d: date{pattern, timezone},例如%date{dd MMM yyyy;HH:mm:ss.SSS}	20 oct. 2006;14:06:49.812
    %logger: logger{length}, 记录日志的方法名，length尽量大于项目所有方法全路径的长度，避免被缩写无法辨识
    %m / %msg / %message: 日志信息
    %p / %le / %level:日志等级
    %t / %thread： 记录日志的线程名
    %n: 平台相关的行分隔符
    %clr: color
-->
<configuration scan="false" scanPeriod="60 seconds" debug="false" >
    <include resource="org/springframework/boot/logging/logback/defaults.xml" />
    <property name="LOG_CONSOLE_PATTERN" value="%clr(%d{yyyy-MM-dd HH:mm:ss}) %clr([%thread]) %clr(%-5level) %logger{50} --> %msg%n" />

    <!--- 设置控制台日志 -->
    <appender name="consoleLog" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${LOG_CONSOLE_PATTERN}</pattern>
        </encoder>
    </appender>

    <!-- SQL相关日志输出-->
    <logger name="com.dw.mybatisloginterceptor.config.MybatisLogInterceptor" level="DEBUG" additivity="false">
        <appender-ref ref="consoleLog" />
    </logger>

    <!-- 设置日志级别，及需要记录日志的类 -->
    <root level="INFO">
        <appender-ref ref="consoleLog" />
    </root>
</configuration>
